alertmanager:
  replicaCount: 1
  ingress:
    hosts: ["alertmanager.autoscalingdemo.io"]
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"

  storageSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: standard
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job','slack']
      group_wait: 2m
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'null'
      routes:
      - match:
          alertname: DeadMansSwitch
        receiver: 'null'
    receivers:
    - name: 'null'
    templates:
    - "*.tmpl"

prometheus:
  ingress:
    hosts: ["prometheus.autoscalingdemo.io"]
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
  resources:
    requests:
      cpu: 250m
      memory: 1Gi
  replicaCount: 1
  retention: 720h
  ruleNamespaceSelector:
    any: true
  serviceMonitorNamespaceSelector:
    any: true
  serviceMonitorsSelector:
    matchExpressions:
    - key: prometheus
      operator: In
      values:
      - kube-prometheus

  storageSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: standard
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 40Gi

grafana:
  ingress:
    hosts: ["grafana.ahoy-k8s.hellofresh.io"]
  auth:
    anonymous:
      enabled: "true"

exporter-kube-state:
  addon_resizer:
    memory: 256Mi
    extra_memory: 20Mi
    cpu: 250m
    extra_cpu: 10m

deployGrafana: true
deployKubeDNS: true
